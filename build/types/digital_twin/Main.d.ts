import { World } from '../world/World';
import { InteractiveRoom } from './InteractiveRoom';
import { Popup_Data } from './Popup_Data';
import { MenuObjectMode } from './Menu/MenuObjectMode';
import { MenuFloor } from './Menu/MenuFloor';
import { MenuLabel } from './Menu/MenuLabel';
import { MenuSearchARoom } from './Menu/MenuSearchARoom';
import { MenuView } from './Menu/MenuView';
import { CameraView } from './CameraView';
import { Server } from './Server';
import { BookMark } from './Menu/BookMark';
import { CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer';
export declare class Main {
    world: World;
    server: Server;
    interactiveRoom: InteractiveRoom;
    popup_Data: Popup_Data;
    menuObjectMode: MenuObjectMode;
    menuFloor: MenuFloor;
    menuLabel: MenuLabel;
    menuSearchARoom: MenuSearchARoom;
    menuView: MenuView;
    cameraView: CameraView;
    roomData: any;
    roomProblems: any;
    roomIOT: any;
    roomOccupant: any;
    domElement: any;
    urlBackend: string;
    urlS3Bucket: string;
    fetchTimeMilliseconds: number;
    urlGrafana: string;
    urlGetLatestData: string;
    urlSurveillanceSearch: string;
    isCurrentTime: boolean;
    private currentStatusOfView;
    isLoadedModel: boolean;
    bookMark: BookMark;
    intervalPlayBack: any;
    minTimestampPlayback: number;
    maxTimestampPlayback: number;
    lastTimestampPlaybackForStop: number;
    cameraObjectArr: Array<CSS2DObject>;
    constructor(world: World, domElement: HTMLElement);
    menuClick(): void;
    setUpDataFromServer(): Promise<boolean>;
    loadDataLabel(label: string): Promise<void>;
    realTimeData(): Promise<void>;
    updateComponents(): Promise<void>;
    getLabelRoomName(room_id: string): string;
    setEvent(): void;
    analyzIndoorEnv(): Promise<void>;
    setAboutHTML(): Promise<void>;
    private loadSCITUReport;
    private getSciTuReportData;
    private setSciTuReportData;
    private addNewEntryToWorld;
    private getDateValue;
}
